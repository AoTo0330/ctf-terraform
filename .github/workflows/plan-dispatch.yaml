name: terraform plan dispatch
run-name: terraform plan dispatch
on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: "Project to plan"
        required: true
        options:
          - "datadog-sandbox"

env:
  PROJECT_MAPPING: '{ "datadog-sandbox": "958371799887" }'
  PROJECT_ID: ${{ github.event.inputs.project }}

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: auth-google
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: "projects/958371799887/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider"
          service_account: "yuta-sa@datadog-sandbox.iam.gserviceaccount.com"

      # Cache Aqua tools
      - name: Cache Tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: ~/.local/share/aquaproj-aqua
          key: cache-tools-${{ hashFiles('aqua.yaml') }}

      # aqua.yamlから取得したパッケージをインストール
      - name: Setup Aqua
        uses: aquaproj/aqua-installer@v3.1.2
        with:
          aqua_version: v2.43.1
          aqua_opts: "" # Lazy install（aqua i -l） がデフォルトで有効になっているため、aqua_optsに空文字を指定して'-l'オプションを取り除く
        env:
          AQUA_DISABLE_COSIGN: "true"
          AQUA_DISABLE_SLSA: "true"

      - name: Terraform fmt
        id: fmt
        shell: bash
        run: terraform fmt -recursive -check -diff
        continue-on-error: true

      - name: Terraform Init
        id: init
        shell: bash
        run: terraform init
        working-directory: ./terraform/projects/${

      - name: Terraform Validate
        id: validate
        shell: bash
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          tfcmt -var "target:${{ env.PROJECT_ID }}" --config "$(git rev-parse --show-toplevel)"/.github/tfcmt.yaml plan -patch -- terraform plan -no-color -input=false
        working-directory: "./terraform/projects/${{ env.PROJECT_ID }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
