###########################################################
# terraform apply addon を手動でトリガーするためのワークフロー
###########################################################
name: terraform apply dispatch for addon
run-name: terraform apply dispatch for addon
on:
  workflow_dispatch:
    inputs:
      project:
        type: choice
        description: "Project to apply"
        required: true
        options:
          - "datadog-sandbox"

permissions:
  contents: write
  pull-requests: write
  id-token: write
  actions: write
  checks: read
  issues: write

env:
  PROJECT_ID: "datadog-sandbox"
  PROJECT_NUM: "958371799887"

jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
      pull-requests: write
      actions: write
      checks: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: auth-google
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          workload_identity_provider: "projects/${{ env.PROJECT_NUM }}/locations/global/workloadIdentityPools/github-actions-pool/providers/github-provider"
          service_account: "yuta-sa@datadog-sandbox.iam.gserviceaccount.com"

      - name: Cache Tools
        id: cache-tools
        uses: actions/cache@v4
        with:
          path: ~/.local/share/aquaproj-aqua
          key: cache-tools-${{ hashFiles('aqua.yaml') }}

      - name: Setup Aqua
        uses: aquaproj/aqua-installer@v4.0.0
        with:
          aqua_version: v2.51.2
          aqua_opts: ""

      - name: Terraform fmt
        id: fmt
        shell: bash
        run: terraform fmt -recursive -check -diff
        continue-on-error: true

      - name: Terraform Init
        id: init
        shell: bash
        run: terraform init
        working-directory: ./terraform/addon

      - name: Terraform Validate
        id: validate
        shell: bash
        run: terraform validate -no-color

      - name: Terraform Apply
        id: apply
        run: |
          tfcmt -var "target:${{ env.PROJECT_ID }}" apply -- terraform apply -no-color -input=false -auto-approve
        working-directory: "./terraform/addon"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_VAR_allowed_ips: ${{ secrets.ALLOWED_IPS }}
          TF_VAR_dd_api_key: ${{ secrets.DD_API_KEY }}
          TF_VAR_ctfd_secret_key: ${{ secrets.CTFD_SECRET_KEY }} 